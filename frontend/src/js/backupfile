This fucking file contains idea I had, but not yet in code.



<div>
    {this.state.meetings.map(meeting =>
        <div key={meeting.id}> {meeting.time_begin} </div>)}
</div>


fetch('http://localhost:9000/player', {
            method: 'DELETE',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                main_pseudo: "test player2",
                auth_code: "AUTHCODE2",
                access_code:  "ACCESSCODE2",
            })
        })



    {/*<div className="gutter-example">
        <Row gutter={16}>
            <Col className="gutter-row" span={3}>
                <div className="gutter-box">Wednesday</div>

            </Col>
            <Col className="gutter-row" span={3}>
                <div className="gutter-box">Thursday</div>
                <Card
                    //style={{ width: 300 }}
                    cover={<img alt="example" src="https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png" />}
                    actions={[<Icon type="setting" />, <Icon type="edit" />, <Icon type="ellipsis" />]}
                >
                    <Meta
                        avatar={<Avatar src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png" />}
                        title="RAID X"
                        description="This is the description"
                    />
                </Card>
            </Col>
            <Col className="gutter-row" span={3}>
                <div className="gutter-box">Friday</div>
            </Col>
            <Col className="gutter-row" span={3}>
                <div className="gutter-box">Saturday</div>
            </Col>
            <Col className="gutter-row" span={3}>
                <div className="gutter-box">Sunday</div>
            </Col>
            <Col className="gutter-row" span={3}>
                <div className="gutter-box">Monday</div>
            </Col>
            <Col className="gutter-row" span={3}>
                <div className="gutter-box">Tuesday</div>
            </Col>
            <Col className="gutter-row" span={3}>
                <div className="gutter-box">Rosters</div>
            </Col>
        </Row>
    </div>*/}


    <FormItem
                      {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}
                      label={index === 0 ? 'Characters' : ''}
                      required={false}
                      key={k}
                    >
                      {getFieldDecorator(`figures[${k}]`, {
                        validateTrigger: ['onChange', 'onBlur'],
                        rules: [{
                          required: true,
                          whitespace: true,
                          message: "Please input character's name or delete this field.",
                        }],
                      })(
                        <AutoComplete
                          style={{width: '60%', marginRight: 8}}
                          placeholder="character name"
                          filterOption={(inputValue, option) => option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1}
                        />
                      )}
                      {keys.length > 1 ? (
                        <Icon
                          className="dynamic-delete-button"
                          type="minus-circle-o"
                          disabled={keys.length === 1}
                          onClick={() => this.remove(k)}
                        />
                      ) : null}
                    </FormItem>
                    );
                    });
                    return (
                    <Form>
                      <FormItem label="Name">
                        {getFieldDecorator('name', {
                          rules: [{required: true, message: 'Please input a name for the roster!'}],
                        })(
                          <Input/>
                        )}
                      </FormItem>
                      {formItems}
                      <FormItem {...formItemLayoutWithOutLabel}>
                        <Button type="dashed" onClick={this.add} style={{width: '60%'}}>
                          <Icon type="plus"/> Add field
                        </Button>
                      </FormItem>
                    </Form>
